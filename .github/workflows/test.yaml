# Test
name: run-by-manually-test
run-name: ${{ github.actor }} is learning GitHub Actions
on: [workflow_dispatch]
# env:
#     GH_TOKEN: ${{ github.token }}
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  test1:
    runs-on: ubuntu-latest
    steps:
      - name: std output test
        shell: 'script -q -e -c "stty cols 200 rows 100; bash {0}"'
        run: gh project list --owner reddikih
      # This doesn't show any output because GitHub Actions doesn't provide stdout by default.
      # - name: gh auth test
      #   # shell: 'script -q -e -c "stty cols 200 rows 100; bash {0}"'
      #   run: gh auth token
      - name: gh auth test 1
        # shell: 'script -q -e -c "stty cols 200 rows 100; bash {0}"'
        run: gh auth token > output 2>&1
      - name: gh auth test 2
        run: result=$(cat output);echo $result

  example_job:
    runs-on: ubuntu-latest
    steps:
      - name: Run Shell Command and Capture Output
        id: shell_command
        run: |
          # シェルコマンドを実行し、その結果を変数に格納
          # result=$(echo "Hello, World!")
          result=$(gh project list --owner scalar-labs)
          echo "result=$result" >> $GITHUB_OUTPUT  # 出力をGitHub Actionsの出力にセット
      - name: Use Shell Command Output
        run: |
          # スクリプト内で変数を使用して結果を表示
          output="${{ steps.shell_command.outputs.result }}"
          echo "The result is $output"

  example_job2:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install GitHub CLI
        run: |
          # GitHub CLIをインストール
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | gpg --dearmor -o /usr/local/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [signed-by=/usr/local/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          apt-get update
          apt-get install gh
        shell: bash

      - name: Run gh project list command and capture output
        id: gh_project_list
        run: |
          # gh project listコマンドを実行し、その結果を変数に格納
          gh_project_list=$(gh project list --json)
          echo "::set-output name=gh_project_list::$gh_project_list"
          
      - name: Use gh project list output
        run: |
          # スクリプト内でJSONパースしてデータを抽出
          gh_output="${{ steps.gh_project_list.outputs.gh_project_list }}"
          project_names=$(echo "$gh_output" | jq -r '.[].name')
          echo "GitHub Projects in the repository:"
          echo "$project_names"
        shell: bash
        # jqコマンドを実行するためにjqパッケージをインストール
        env:
          DEBIAN_FRONTEND: noninteractive
        run: sudo apt-get -y install jq

